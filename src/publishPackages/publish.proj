<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(RepoRoot)eng/Directory.Build.props" />
  <Import Project="$(RepoRoot)src/dir.props" />

  <PropertyGroup>
    <ArtifactsPkgDir>$(RepoRoot)artifacts/packages/</ArtifactsPkgDir>
    <ManifestDir>$(RepoRoot)artifacts/asset-manifests/</ManifestDir>
    <ArtifactsTempWorkDir>$(RepoRoot)artifacts/tmp/</ArtifactsTempWorkDir>
    <TarballDir>$(RepoRoot)artifacts/tarball/</TarballDir>
    <ManifestName>source-build-reference-packages</ManifestName>
    <RestoreSources>
      $(RestoreSources);
      https://dotnetfeed.blob.core.windows.net/dotnet-tools-internal/index.json;
    </RestoreSources>
    <CreateTargets>
      CreateTarball;
      CreateEmptyPackage;
    </CreateTargets>
    <BuildDependsOn>
      $(CreateTargets)
    </BuildDependsOn>
    <BuildDependsOn Condition="'$(AzureAccessToken)' != ''">
      $(BuildDependsOn)
      PreparePublish;
    </BuildDependsOn>
  </PropertyGroup>

  <Target Name="Restore"/>
  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
  <Target Name="Pack" />

  <Target Name="GetTarballFileName">
    <PropertyGroup>
      <TarballFileName>$(TarballDir)Private.SourceBuild.ReferencePackages.$(VersionPrefix)-$(VersionSuffix).tar.gz</TarballFileName>
    </PropertyGroup>
  </Target>

  <Target Name="CreateTarball" DependsOnTargets="GetTarballFileName" >
    <MakeDir Directories="$(TarballDir)" />

    <Exec Command="tar --numeric-owner -czf $(TarballFileName) *.nupkg" WorkingDirectory="$(ArtifactsRefPkgDir)" />

    <Message Importance="High" Text="Created $(TarballFileName)" />
  </Target>

  <Target Name="CreateEmptyPackage">
    <MSBuild 
      Projects="$(RepoRoot)src/emptyPackageProject/Private.SourceBuild.ReferencePackages.csproj"
      Properties="PackageOutputPath=$(ArtifactsPkgDir)"
      Targets="Restore;Pack" />
  </Target>

  <Target Name="PreparePublish" DependsOnTargets="$(CreateDependsOn)">
    <MakeDir Directories="$(ManifestDir)" />
    <MakeDir Directories="$(ArtifactsTempWorkDir)" />
    <PropertyGroup>
      <ExpectedFeedUrl>https://$(AzureAccountName).blob.core.windows.net/$(ContainerName)/index.json</ExpectedFeedUrl>
      <AccountKey>$(AzureAccessToken)</AccountKey>
    </PropertyGroup>
  </Target>

  <Target Name="PreparePublishPackages" DependsOnTargets="PreparePublish">
    <PropertyGroup>
      <AssetManifestFilePath>$(ManifestDir)reference-packages-nupkg-manifest.xml</AssetManifestFilePath>
    </PropertyGroup>
    <ItemGroup>
      <PackagesToPublish Include="$(ArtifactsPkgDir)**/*.nupkg" />
    </ItemGroup>
    <PushToAzureDevOpsArtifacts
      ItemsToPush="@(PackagesToPublish)"
      ManifestBuildData="Location=$(ExpectedFeedUrl)"
      ManifestRepoUri="$(ManifestName)"
      ManifestBranch="$(ManifestBranch)"
      ManifestBuildId="$(ManifestBuildId)"
      ManifestCommit="$(ManifestCommit)"
      IsStableBuild="$(IsStableBuild)"
      AssetManifestPath="$(AssetManifestFilePath)"
      AssetsTemporaryDirectory="$(ArtifactsTempWorkDir)" />

    <!-- Copy the generated manifest to the build's artifacts -->
    <Copy
      SourceFiles="$(AssetManifestPath)"
      DestinationFolder="$(TempWorkingDirectory)\$(AssetManifestFileName)" />

    <Message
      Text="##vso[artifact.upload containerfolder=AssetManifests;artifactname=AssetManifests]$(TempWorkingDirectory)/$(AssetManifestFileName)"
      Importance="high" />

  </Target>

  <Target Name="PreparePublishFiles" DependsOnTargets="PreparePublish;GetTarballFileName">
    <PropertyGroup>
      <AssetManifestFilePath>$(ManifestDir)reference-packages-tar-manifest.xml</AssetManifestFilePath>
    </PropertyGroup>
    <ItemGroup>
      <FilesToPublish Include="$(TarballFileName)" />
    </ItemGroup>
    <PushToAzureDevOpsArtifacts
      ItemsToPush="@(FilesToPublish)"
      ManifestBuildData="Location=$(ExpectedFeedUrl)"
      ManifestRepoUri="$(ManifestName)"
      ManifestBranch="$(ManifestBranch)"
      ManifestBuildId="$(ManifestBuildId)"
      ManifestCommit="$(ManifestCommit)"
      IsStableBuild="$(IsStableBuild)"
      AssetManifestPath="$(AssetManifestFilePath)"
      AssetsTemporaryDirectory="$(ArtifactsTempWorkDir)" />

    <!-- Copy the generated manifest to the build's artifacts -->
    <Copy
      SourceFiles="$(AssetManifestPath)"
      DestinationFolder="$(TempWorkingDirectory)\$(AssetManifestFileName)" />

    <Message
      Text="##vso[artifact.upload containerfolder=AssetManifests;artifactname=AssetManifests]$(TempWorkingDirectory)/$(AssetManifestFileName)"
      Importance="high" />

  </Target>



  <Import Project="$(RepoRoot)eng/Directory.Build.targets" />

</Project>
